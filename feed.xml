<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Talks | Red Panthers - Experts in Ruby on Rails kochi, India</title>
    <description>We specialize in helping our clients validate, build and expand their business through technology. If you have an idea, or want to build something innovative, Let&#39;s help you. </description>
    <link>http://slides.redpanthers.co/slides/</link>
    <atom:link href="http://slides.redpanthers.co/slides/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 07 Mar 2016 10:49:19 +0530</pubDate>
    <lastBuildDate>Mon, 07 Mar 2016 10:49:19 +0530</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Meteor JS</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
## Polymer JS
&lt;/section&gt;
&lt;section&gt;
	&lt;h4&gt;Sibin Xavier&lt;/h4&gt;
	&lt;p&gt;
		Frontend Developer
	&lt;/p&gt;
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### What is Polymer JS
The Polymer library is designed to make it easier and faster for developers to create great,
reusable components for the modern web.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### HTML and HTML 5

- Form , Inputs , Paragraph
- Video , Canvas , Audio  - HTML 5

These Elements have it&#39;s own apis, form , input have different type of javascript apis

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Complex website need more complex elements

- Like Sidebar, Navbar, Chat Windows
- Developers build their own solutions, but many features are common

### Reusable Components
With custom elements, you can extend the vocabulary of HTML with your own elements.
Elements that provide sophisticated UI.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Polymer JS

It is a collection of web components, We can build custom components which uses
Shady DOM, faster than normal DOM and lighter
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Shadow DOM

- Shadow DOM provides encapsulation
for the JavaScript, CSS, and templating in a Web Component.
- Shadow DOM makes it so these things remain separate
from the DOM of the main document.
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Tree-scoping

- Tree-scoping is the ability to take a DOM subtree and hide it
from the main document scope
Jquery

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;x-fade&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cool.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/x-fade&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;


Shadown DOM

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;x-fade&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cool.png&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/x-fade&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## With Tree Scoping
-Details of the implementation are hidden.
-Queries over the document will not see the canvas or the div.
-The new nodes are not affected by stylesheets, because they are not in the document scope.
-The img node will not lose styling, because it never moves.
-The developer can add a new img or replace the old one, it’s just a regular child of x-fade

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Shadow DOM Real Picture
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;x-fade&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cool.png&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;  #shadow-root
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;content&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;select=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;img&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/x-fade&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Why Shady DOM

- Shadow DOM is not developed as Standard, Not Common in All browser
- Lots of code required to polyfill Shadow DOM
- It’s slow to indirect all the DOM API.
- Structures like NodeList can simply not be emulated.
- There are certain accessors that cannot be overwritten (for example, window.document, window.document.body).
- The polyfill returns objects that are not actually Nodes, but Node proxies, which can be very confusing.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Shady DOM
- Originated from idea of Shadow DOM
- Shady DOM and Shadow DOM are compatible
- Once Shadow DOM is common, Shady DOM use its features
- &#39;Examine it using the shady DOM API&#39; to see Shadow DOM
-
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;var arrayOfNodes = Polymer.dom(x-fade).children;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Polymer Elements
- Iron Elements
- Paper Elements
- Google Web Components
- Gold Elements
- Neon Elements
- Platinum Elements
- Molecules
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Polymer JS Events
  - Support all Javascript events
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Polymer Styles
- Isolated styles for elements
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Data Binding  - Syntax
- One Way Bind [[]]
- Two way binding 
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
## Data Binding - Helper functions
### DOM-REPEAT

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;is=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dom-repeat&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;items=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#x7b;&amp;#x7b;employees&amp;#x7d;&amp;#x7d;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;# &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&amp;#x7b;&amp;#x7b;index&amp;#x7d;&amp;#x7d;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;First name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&amp;#x7b;&amp;#x7b;item.first&amp;#x7d;&amp;#x7d;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Last name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&amp;#x7b;&amp;#x7b;item.last&amp;#x7d;&amp;#x7d;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Data binding - Helper functions
### DOM-IF

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;is=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dom-if&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;if=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#x7b;&amp;#x7b;user.isAdmin&amp;#x7d;&amp;#x7d;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	Only admins will see this.
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&amp;#x7b;&amp;#x7b;user.secretAdminStuff&amp;#x7d;&amp;#x7d;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Reference

* [PolymerJS](https://www.polymer-project.org/)
* [Shadow &amp;amp;&amp;amp; Shady DOM](http://glazkov.com/2011/01/14/what-the-heck-is-shadow-dom/)
&lt;/section&gt;
</description>
        <pubDate>Sun, 06 Mar 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/polymer-js</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/polymer-js</guid>
        
        
      </item>
    
      <item>
        <title>Meteor JS</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
### Meteor Javascript Framework
&lt;/section&gt;
&lt;section&gt;
	&lt;h4&gt;Sibin Xavier&lt;/h4&gt;
	&lt;p&gt;
		Frontend Developer
	&lt;/p&gt;
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Frameworks
#### Web Frameworks
- Ruby On Rails, Laravel, Django, Zend, Yii, Symphony...
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
####  Meteor JS is a complete Javascript Framework
- Use HTML,CSS, Javascript and MongoDB
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Node JS , Mongo DB, Javascript Template engines, Javascript View Frameworks
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Javascript Web Technologies
#### Meteor and MEAN ( MonogoDB Express Angular NodeJS)
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Node JS
- Server side Javascript
- Originated from Chrome&#39;s Webkit engine
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Mongo DB
- No SQL Database
- Stores as Object
- No Columns and Rows
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Javascript Template Engines
- React JS, Handlebar , Blaze
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Meteor
- Cross Platform application - Windows, Linux and Mac
- Executable meteor application available on Windows

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Meteor command
##### Basic
&amp;gt; Meteor

- `create`, `run`

##### Install packages
&amp;gt; Meteor

- `add`, `remove`, `update`
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Create Application

&amp;gt;
`meteor create app-name`

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Server and Client side codes
##### Client
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;if(Meteor.isClient)&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	// work only in client side web browser or mobile devices
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

##### Server
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;if(Meteor.isServer)&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	// work only in server, like PHP, Ruby
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Ease of Use
###### Can use folder structure
- client - html,css, subscribe, calles
- server - methods, publish, restirction , collection
- public - images,fonts
- lib - common collection
- private  - secure contents, can asses using `Asset`
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Routes/ Routing
- Iron Router
- Flow Router
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Flow Router

`meteor add kadira:flow-router`

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Flow Router Config

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nx&quot;&gt;FlowRouter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/blog/:cat/:id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;blogPostRoute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		&lt;span class=&quot;nx&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		&lt;span class=&quot;nx&quot;&gt;triggersEnter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localeCheck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		&lt;span class=&quot;nx&quot;&gt;triggersLeave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localeCheck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queryParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;			&lt;span class=&quot;c1&quot;&gt;// Render Template Logic, Subscription&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;			&lt;span class=&quot;nx&quot;&gt;BlazeLayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;componentLayout&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;login&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;11&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;12&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&quot;/blog/meteor/abc?show=yes&amp;amp;color=black&quot;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Flow Router properties, helpers
- FlowRouter.go(&#39;/&#39;)
- FlowRouter.getParam(paramName);
- FlowRouter.getQueryParam(queryStringKey);
- FlowRouter.path(pathDef, params, queryParams)
- FlowRouter.url(pathDef, params, queryParams)
- FlowRouter.getRouteName()
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Flow Router Contd..
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;FlowRouter.notFound = &amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		// Subscriptions registered here don&#39;t have Fast Render support.
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		subscriptions: function() &amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		&amp;#x7d;,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		action: function() &amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		&amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Flow Router helper for Template
- subsReady
- isSubReady (deprecated)
- pathFor
- urlFor
- param
- queryParam
- currentRouteName

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;lt;a href=&quot;&amp;#x7b;&amp;#x7b;pathFor &#39;routeName&#39; params=params query params&amp;#x7d;&amp;#x7d;&quot;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;id=3 name=&quot;John Doe&quot;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Template
- Blaze Template
- Reusable Components
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;lt;template name=&quot;templateName&quot;&amp;gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	// html codes
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Temaplete Helpers
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7b;&amp;#x7b;#if booleanValue&amp;#x7d;&amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7b;&amp;#x7b; else&amp;#x7d;&amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7b;&amp;#x7b;/if&amp;#x7d;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7b;&amp;#x7b;#each array|object &amp;#x7d;&amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	- this.objectProperties
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	- @index
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7b;&amp;#x7b;/each&amp;#x7d;&amp;#x7d;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Meteor Template Helpers

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;Template.templateName.helpers(&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		teams: function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;			return array
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;		&amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;)&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7b;&amp;#x7b;#each teams&amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7b;&amp;#x7b;/each&amp;#x7d;&amp;#x7d;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Meteor Template Events
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;Template.templateName.events(&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&#39;click selector&#39;: function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&amp;#x7d;,
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&#39;submit form selector&#39;: function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;	&amp;#x7d;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;)
&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Meteor Template Events
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;Template.templateName.onCreated
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;Template.templateName.onRendered
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;Template.templateName.onDestroyed
&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Mongo
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;Task = new Meteor.Collection(&#39;tasks&#39;)
&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Mongo CRUD
- Task.insert()
- Task.update(id,{updatedData})
- Task.remove({})
- Task.remove({_id:id})
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Mongo Read
- Task.find({}).fetch() -&amp;gt; array
- Task.find({selector},{options})
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Mongo Read Selector

- {_id: id, name:name}
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Mongo Read Options
- limit
- skip (Meteor)
- sort
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### Authetication

##### Meteor Account packages
- Username/Password, Facebook, Twitter

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Roles

##### Meteor Roles Packages

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Extend/ Improve meteor Applications
- Use Pckages
- Use alternate Template Engines
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
#### Thanks
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Reference
* [Meteor](https://www.meteor.com/)
* [Iron Router](https://github.com/iron-meteor/iron-router)
* [Flow Router](https://github.com/kadirahq/flow-router)
* [Blaze Layout](https://github.com/kadirahq/blaze-layout)
* [Flow Router Helpers](https://github.com/arillo/meteor-flow-router-helpers)
&lt;/section&gt;
</description>
        <pubDate>Fri, 26 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/meteor-framework</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/meteor-framework</guid>
        
        
      </item>
    
      <item>
        <title>Graphql</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
# Graphql

Feb 21, 2016
&lt;/section&gt;

&lt;!-- Just to show that markdown and html can be mixed --&gt;
&lt;section&gt;
  &lt;h4&gt;Hi, I am&lt;/h4&gt;
  &lt;h3&gt;Juliat Joy&lt;/h3&gt;
  &lt;div style=&quot;width:150%;&quot;&gt;
    &lt;div style=&quot;float:left; width:30%;&quot;&gt;
      &lt;img alt=&quot;Juliat Joy&quot; src=&quot;https://avatars2.githubusercontent.com/u/7353124?v=3&amp;amp;u=6eeeedc3e9ecfbf20e6dcd128ea7344ed9261f49&amp;amp;s=140&quot; style=&quot;float: left; width:400px; height:400px;&quot; /&gt;
    &lt;/div&gt;
    &lt;div style=&quot;float:right; width:70%;&quot;&gt;
      &lt;ul style=&quot;float: left; padding-top: 4%;&quot;&gt;
          &lt;li&gt;Ruby Devoloper Trainee at Redpanthers&lt;/li&gt;

      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### GraphQl

GraphQl is a data query and data manipulation language for client applications.GraphQL is an application layer query language from Facebook. GrpahQl is not tied with a database. With GraphQL, you can define your backend as a well-defined graph-based schema. Then client applications can query your dataset as they are needed.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd...

We don&#39;t need to change our backend for data requirement changes in client apps. This simply solves one of the biggest problems in managing REST API.

&lt;/section&gt;

&lt;section&gt;

&lt;img src=&quot;/slides/images/GraphQl.png&quot; /&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd...

GraphQL is a specification so, it can be used with any platform and any language. It has a reference implementation on JavaScript, maintained by Facebook.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### What problems does GraphQl try to solve

* Client-side developers should have a way to ask for the data they need.
* Server-side developers should have a way to expose the data they have.
* There should be an easy and efficient way to query data (the REST API consumes a lot of resources, especially with mobile apps).

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### We will see how Graphql works


At the heart of any GraphQL implementation is a description of what types of objects it can return, described in a GraphQL type system and returned in the GraphQL Schema.

  ```type Student {
  name: String
}```

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd ...

  A common pattern in many APIs, and indeed in GraphQL is to give objects an ID that can be used to refetch the object.

  ```type Student {
  id: String
  name: String
}```


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd...

  Now thing in this particular school there are only 8th 9th and 10th standard.
  So we have to define an enum for standard

  ```enum Standard { 8th, 9th, 10th}```

  Now we will add a field to Student describing what standard they are in.

  ```type Student {
  id: String
  name: String
  appearsIn: [standard]
}```

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Graphql

  When we define a schema, we define an object type that is the basis for all queries. The name of this type is Query by convention, and it describes our public, top-level API. Our Query type for this example will look like this:

  ```type Query {
  student(id: String!): Student
}```

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Query syntax

An example query on the above schema would be:

  ```query StudentNameQuery {
  student {
    name
  }
}```

The initial line, query StudentNameQuery, defines a query with the operation name StudentNameQuery that starts with the schema&#39;s root query type; in this case, Query.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd...

The result of this query would then be:

  ```{
  &quot;student&quot;: {
    &quot;name&quot;: &quot;R2-D2&quot;
  }
}```


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
  ### contd...

  One of the key aspects of GraphQL is its ability to nest queries.

  ```
    query NestedQuery {
      student{
        name
        friends {
          name
          appearsIn
          friends {
            name
          }
        }
      }
    }
  ```
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
  ### contd...

  ```
    {
      &quot;student&quot;: {
        &quot;name&quot;: &quot;Ram&quot;,
        &quot;friends&quot;: [
          {
            &quot;name&quot;: &quot;Luke&quot;,
            &quot;appearsIn&quot;: [ &quot;8th&quot; ],
            &quot;friends&quot;: [
              { &quot;name&quot;: &quot;Han&quot; },
              { &quot;name&quot;: &quot;Leia&quot; },
              { &quot;name&quot;: &quot;Krishna&quot; },
              { &quot;name&quot;: &quot;Mujeeb&quot; }
            ]
          },
          {
            &quot;name&quot;: &quot;Han&quot;,
            &quot;appearsIn&quot;: [ &quot;10th&quot; ],
            &quot;friends&quot;: [
              { &quot;name&quot;: &quot;Luke&quot; },
              { &quot;name&quot;: &quot;Lei Organa&quot; },
              { &quot;name&quot;: &quot;Neethu&quot; }
            ]
          },
          {
            &quot;name&quot;: &quot;Leia&quot;,
            &quot;appearsIn&quot;: [ &quot;8th&quot; ],
            &quot;friends&quot;: [
              { &quot;name&quot;: &quot;Luke&quot; },
              { &quot;name&quot;: &quot;Han&quot; }
            ]
          }
        ]
      }
    }
  ```
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd...

The Query type above defined a way to fetch a student given their ID. We can use it by hardcoding the ID in the query:

  ```
    query FetchLukeQuery {
      student(id: &quot;1000&quot;) {
        name
      }
    }
  ```
to get

  ```
    {
      &quot;student&quot;: {
        &quot;name&quot;: &quot;Luke Skywalker&quot;
      }
    }
  ```

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Drawbacks

It misses the ability to update clients reactively. In the GraphQL spec, there is no way to subscribe and get updates. Right now, to achieve real-time updates, we need to poll the server and get the changes.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Setup

Make a demo folder

  ```
    mkdir graphql-demo
    cd graphql-demo
  ```
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd...

We have to install 3 packages

* graphql, the reference implementation of GraphQL in JS

* express, a basic web framework.

* express-graphql, middleware for express to make it easy to expose a GraphQL server.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### contd...

Install 3 packages

  ```
    npm init -f
    npm install graphql --save
    npm install express --save
    npm install express-graphql --save
  ```
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### References

http://hueypetersen.com/posts/2015/02/02/first-thoughts-on-graph-ql/
https://github.com/facebook/graphql
https://facebook.github.io/react/blog/2015/05/01/graphql-introduction.html/
https://code.facebook.com/posts/1691455094417024/graphql-a-data-query-language/
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Thank you :)

&lt;/section&gt;
</description>
        <pubDate>Sun, 21 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/Graphql/</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/Graphql/</guid>
        
        
      </item>
    
      <item>
        <title>Memoization in ruby</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
# Memoization in Ruby

Feb 18, 2016
&lt;/section&gt;

&lt;section&gt;
  &lt;h4&gt;Pooja Raghunath&lt;/h4&gt;
  &lt;p&gt;
    Ruby Developer@RedPanthers
  &lt;/p&gt;
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### What is Memoization?

* Memoization is the process of storing a computed value to avoid duplicated work by future calls.

* Memoization can be used to initialize a variable and store it with the result of some computation that is expected to give same result if computed again.

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Basic memoization pattern
* Perform some work
* Store the work result
* Use stored results in future calls

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Types of memoization
* Single-line memoization
* Multiple-line memoization

&lt;/section&gt;

&lt;section&gt;
Single-line memoization
&lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/mem01.png&quot; /&gt;
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###Multiple-line memoization
Slow code won’t fit on one line without doing terrible things to it. There are a few ways to extend the basic pattern to work with multiple lines of code.

&lt;/section&gt;

&lt;section&gt;
Multiple-line memoization

&lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/memo11.png&quot; /&gt;
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### When to use Memoization
* When you have complex calculation that is supposed to give same result on multiple calls

* When you have a method that is giving same result over multiple calls but you need to call it multiple times

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### When to use Memoization -- contd.
* When you have database query with same parameters for a instance

  @user_score ||= User.where(name: &#39;Sam&#39;).first.try(:name)


* If you need user Sam&#39;s score then you can calculate and store it. When you need again then you can just return it from the instance variable.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###What about nil and false in Memoization?

* Memoization technique  does not work with nil,false values.

@variable ||= false # suppose calculation value is false  

* As @variable had false value it will again go and evaluate for the OR part of condition which will come out false again.

* Thus, over multiple calls Memoization will not work if value comes out to be nil, or false.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### What is Lazy initialization?

Lazy initialization is delaying intialization of the object/entity until the need of it for first time.

&lt;/section&gt;

&lt;section&gt;
 Lazy initialization
&lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/lazy1.png&quot; /&gt;


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Does Rails support Memoization?

* Rails had support for Memoize through ActiveSupport::Memoizable.
* Memoizable is deprecated from Rails.
* Memoist is an extraction of ActiveSupport::Memoizable.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### When should you memoize?

* When  duplicated database calls
* When  expensive calculations
* When  repeated calculations that don’t change


&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### When shouldn’t you memoize?

* Method that takes parameter
* Methods that uses instance variables

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Conclusion
* So if you’re working on an app that needs a lot of memoization, you might want to use a gem that handles memoization for you with a nice, friendly API.

* Memoist seems to be a good one, and pretty similar to what Rails used to have.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### References
* http://www.justinweiss.com/articles/4-simple-memoization-patterns-in-ruby-and-one-gem/
* http://rubyinrails.com/2014/11/03/memoization-ruby/
* http://gavinmiller.io/2013/basics-of-ruby-memoization/

&lt;/section&gt;
</description>
        <pubDate>Thu, 18 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/memoization-in-ruby</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/memoization-in-ruby</guid>
        
        
      </item>
    
      <item>
        <title>Shared Examples in Rspec</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
# Shared Examples in Rspec and keeping the code dry

Feb 16, 2016
&lt;/section&gt;

&lt;!-- Just to show that markdown and html can be mixed --&gt;
&lt;section&gt;
  &lt;h4&gt;Hi, I am&lt;/h4&gt;
  &lt;h3&gt;Ajay Joseph&lt;/h3&gt;
  &lt;div style=&quot;width:150%;&quot;&gt;
    &lt;div style=&quot;float:left; width:30%;&quot;&gt;
      &lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;https://scontent-hkg3-1.xx.fbcdn.net/hphotos-frc3/v/t1.0-9/945390_3255807009318_1975357127_n.jpg?oh=1cbfba3bef55ba6fa91cb048a4808622&amp;amp;oe=5747C14D&quot; style=&quot;float: left; width:300px; height:300px;&quot; /&gt;
    &lt;/div&gt;
    &lt;div style=&quot;float:right; width:70%;&quot;&gt;
      &lt;ul style=&quot;float: left; padding-top: 4%;&quot;&gt;
          &lt;li&gt;Ruby Devoloper Trainee at Redpanthers&lt;/li&gt;

      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### DRY
DRY (Don&#39;t Repeat Yourself)  is a principle of Software Development to reducing repetition of information or codes. We can apply DRY quite broadly to database schema, test plan, system, even documentation. DRY is mainly impremented using inheritance.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##What is shared example?


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###Shared examples describe behaviour of classes or modules.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###Shared examples make testing compositions of objects much easier. They allow us to execute the same group of expectations against several classes.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###Including shared groups in other groups

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
* include_examples &quot;name&quot;
* it_behaves_like &quot;name&quot;
* it_should_behave_like &quot;name&quot;
* matching metadata

&lt;/section&gt;

&lt;section&gt;

    &lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/Screen Shot 2016-02-16 at 7.58.14 am.png&quot; /&gt;

&lt;/section&gt;

&lt;section&gt;

    &lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/Screen Shot 2016-02-16 at 8.01.30 am.png&quot; /&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
To prevent this kind of subtle error a warning is emitted if you declare multiple
methods with the same name in the same context. Should you get this warning
the simplest solution is to replace include_examples with it_behaves_like, in this
way method overriding is avoided because of the nested context created by it_behaves_like.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Shared Examples Conventions

The simplest approach is to require files with shared examples explicitly
from the files that use them. Keep in mind that RSpec adds the spec
directory to the LOAD_PATH, so you can say require
&#39;shared_examples_for_widgets&#39; to require a file at
###{PROJECT_ROOT}/spec/shared_examples_for_widgets.rb.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Shared Examples Conventions contd

One convention is to put files containing shared examples in spec/support/
and require files in that directory from spec/spec_helper.rb:

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Shared Examples Conventions contd

When all of the groups that include the shared group reside in the same file,
just declare the shared group in that file.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Shared Examples Scenarios



&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Shared examples group included in two groups in one file

&lt;/section&gt;

&lt;section&gt;

    &lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/Screen Shot 2016-02-16 at 8.15.17 am.png&quot; /&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Passing parameters to a shared example group

&lt;/section&gt;

&lt;section&gt;

    &lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/Screen Shot 2016-02-16 at 8.20.11 am.png&quot; /&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Sharing metadata automatically includes shared example groups

&lt;/section&gt;

&lt;section&gt;

    &lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;/slides/images/Screen Shot 2016-02-16 at 8.24.01 am.png&quot; /&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###References

* https://www.relishapp.com/rspec/rspec-core/docs/example-groups/shared-examples
* http://modocache.svbtle.com/code-reading-shared-examples-in-rspec
* http://modocache.io/shared-examples-in-rspec

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;

##Thank you :)

&lt;/section&gt;
</description>
        <pubDate>Tue, 16 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/shared-examples-rspec</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/shared-examples-rspec</guid>
        
        
      </item>
    
      <item>
        <title>Jasmite Test Suite</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
 Jasmine Javascript Test Suite
&lt;/section&gt;
&lt;section&gt;
	&lt;h4&gt;Sibin Xavier&lt;/h4&gt;
	&lt;p&gt;
		Frontend Developer
	&lt;/p&gt;
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Testing is Important !!
 - To discover defects.
 - To avoid user detecting problems
 - To prove that the software has no faults
 - To learn about the reliability of the software.
 - To avoid being sued by customers
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Testing is Important Cont..
 - To ensure that product works as user expected.
 - To stay in business
 - To detect defects early, which helps in reducing the cost of defect fixing?
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Different type testing approach

  - Test Driven Development ( TDD )

  - Behavior Driven Development ( BDD )

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### TDD - Test Driven Development

  Simple and Easy to understand for Developers

  - First the developer writes some tests.
  - The developer then runs those tests and (obviously) they fail because none of those features are actually implemented.
  - Next the developer actually implements those tests in code.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### TDD - contd..
  - If the developer writes his code well, then the in next stage he will see his tests pass.
  - The developer can then refactor his code, add comments, clean it up, as he wishes because the developer knows that    if the new code breaks something, then the tests will alert him by failing.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Test Driven Development - Life Cycle
  * Add a Test
  * Run all tests and see if the new one fails
  * Write some code
  * Run tests
  * Refactor code
  * Repeat
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;

  ![TDD](/slides/assets/images/tdd-flowchart.png)
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Various Methods

- KISS ( Keep It Simple, Stupid)
- YAGNI (You Aren&#39;t Gonna Need It)

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Everything have some Advantages

  - More Test More Productive
  - More Quality
  - More Issue solving
  - More Cases
  - More Happy

Still issues

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Everything have some Limitation

  * TDD also has many limitations
  * Extensive use of `Unit Testing`
  * Time spent to write Tests
  * Depend upon developer
  * Security Issues and Lots of useless codes
  * Maintenance is Cumbersome

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Many alternatives

- Test Driven Work
- Acceptance Test Driven Development

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### BDD - Behavior Driven Test  

- New approach

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### BDD is not

![TDD vs BDD](/slides/assets/images/two-roads.jpg)
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### BDD is

![Originated from TDD](/slides/assets/images/originated-from-tdd.jpg)
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### BDD is

- Use General Technique and Principle of TDD
- Use benefits of Domain Driven Design and Object Oriented Analysis and Design


&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### BDD Focus On

  - Where to start in the process
  - What to test and what not to test
  - How much to test in one go
  - What to call the tests
  - How to understand why a test fails

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
####Example

  &amp;gt;Scenario 1:
  Refunded items should be returned to stock
  Given a customer previously bought a black sweater from me
  And I currently have three black sweaters left in stock
  When he returns the sweater for a refund
  Then I should have four black sweaters in stock

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Jasmine - BDD for JavaScript Applications

Jasmine is Behavior Driven Development framework, It is not depend upon any other Frameworks,
Also It is not required DOM ( Document Object Model)

Jasmine available as Standalone version, as packages for Angular JS, Meteor JS and a Couple of other frameworks

Current Version is 2.4.1

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Similar to other Testing Frameworks

It is similar to RSpec and Other Frameworks
***
#### Common

- Describe  block `describe`
- It block `it`
- Expect, ToBe, ToEqual etc...
- Pending methods

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##### Typical Example

  ```
  describe(&#39;A Suite &#39;, function(){
    it(&quot;checking true equal to true&quot;, function(){
      expect(true).tobe(true)
    })  
  })
  ```

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Suite

* Describe method
* Describe : String and Function as argument


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Specs

* It method
* It: String and Function as arguments
* As many expectations  
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
#### `Pending` in Jasmine

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;xdescribe(&#39;A Pending Suite&#39;, function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    xit(&quot;Checking pending spec&quot;, function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        pending()
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &amp;#x7d;)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;)
&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Setup and Teardown

##### Before and After methods

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;beforeEach(function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;)&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;afterEach(function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;)&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Setup and Teardown - Contd..

##### Before All  and After  All
- Execute only once

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;beforeAll(function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;)&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;afterAll(function()&amp;#x7b;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;#x7d;)&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
# Spies

- A Spy can stub any function and tracks call to it and all arguments
- A Spy only exist inside describe or it block
- A Spy remove after each spec (it)

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
## Spies - Helpers
- toHaveBeenCalled - return `true` if spy called
- toHabeBeenCalledWith - return `true` if the argument list matches any recorded calls

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Example with Spy

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Reference

* [Jasmine](http://jasmine.github.io/)
* [Josidavis](http://joshldavis.com/2013/05/27/difference-between-tdd-and-bdd/)
&lt;/section&gt;
</description>
        <pubDate>Mon, 15 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/jasmine-javascript-test-suite</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/jasmine-javascript-test-suite</guid>
        
        
      </item>
    
      <item>
        <title>Managing environment variable</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
## Managing Environment Configuration Variables in Rails

Feb 11, 2016
&lt;/section&gt;

&lt;!-- Just to show that markdown and html can be mixed --&gt;
&lt;section&gt;
  &lt;h4&gt;Hi, I am&lt;/h4&gt;
  &lt;h3&gt;Augustin Pulikan&lt;/h3&gt;
  &lt;div style=&quot;width:150%;&quot;&gt;
    &lt;div style=&quot;float:left; width:30%;&quot;&gt;
      &lt;img alt=&quot;Jeroen De Meerleer&quot; src=&quot;https://scontent.fmaa1-1.fna.fbcdn.net/hphotos-xft1/v/t1.0-9/12065624_873705689393220_2906766376590498181_n.jpg?oh=a5eca759b8989d24dd44d77d04b5eb8d&amp;amp;oe=57443E25&quot; style=&quot;float: left; width:300px; height:300px;&quot; /&gt;
    &lt;/div&gt;
    &lt;div style=&quot;float:right; width:70%;&quot;&gt;
      &lt;ul style=&quot;float: left; padding-top: 4%;&quot;&gt;
          &lt;li&gt;Ruby Devoloper Trainee at Redpanthers&lt;/li&gt;

      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/section&gt;

&lt;!-- Just to show that markdown and html can be mixed --&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Introduction

when developing apps with Rails you need to set up environment variables to keep sensitive information secure in your code

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###Why Configuration Variables?

Hard coding sensitive information and committing them into source control can be dangerous as it means anyone with access to your code can see your API keys and secrets

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### few ways to manage environment variables in Rails

 Using Bash or Zsh Profile

 dotenv

 Figaro

 secrets.yml
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Using Bash or Zsh Profile
 You can store the environment variable key/value pairs with the operating system directly and globally

 export KEY=value
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Demerits of using Zsh or Bash profile

 Config file might get cluttered with so many of these variables and you’ll end up with one very messy global space

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### dotenv
dotenv solves the problems of setting project-specific environment vars and is super easy
You can then put your sensitive information inside a .env file at the root of your project directory

gem &#39;dotenv-rails&#39;

PASSWORD=h4lpd4skpw0rd

S3_BUCKET=YOURS3BUCKET

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Figaro
 Figaro is similar to dotenv. What it does is to allow you to store all your sensitive secrets in a YAML file at config/application.yml. With it’s simple figaro install command you get your YAML file automatically added to gitignore.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### secrets.yml
 Very similar to Figaro’s config/application.yml, secrets.yml was added to Rails 4.1. You’ll have to add your secrets in config/secrets.yml as is done with Figaro

 The variables added here are accessible through Rails.application.secrets


&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
### Advantages of secrets.yml

 Enhanced security

 Prevents session tampering

 No need for any external dependency


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###Other Solutions

If you don’t want to use a gem to separate sensitive information from your project, there is a common pattern to create simple YAML files. You can name it private.yml.


&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### How do I choose?

Using Bash or Zsh profile to store environment variables allows you to set system wide and user specific environment variable this approach is, as your configuration grows and becomes more complex The addition of secrets.yml to Rails 4.1 is a major step in the right direction and also does a very good job at managing app-specific environment variables in dotenv add your .env file to gitignore when using dotenv. Figaro does this for you because of its convention of never committing configuration files

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### References

https://www.launchschool.com

http://stackoverflow.com

https://www.twilio.com
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Thank you :)

&lt;/section&gt;
</description>
        <pubDate>Thu, 11 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/managing environment variable</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/managing environment variable</guid>
        
        
      </item>
    
      <item>
        <title>Form Objects</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
# Form Objects
### Decomplexing your models

Feb 09, 2016
&lt;/section&gt;

&lt;!-- Just to show that markdown and html can be mixed --&gt;
&lt;section&gt;
  &lt;div style=&quot;width:150%;&quot;&gt;
    &lt;div style=&quot;float:left;&quot;&gt;
      &lt;img alt=&quot;Harisankar P S&quot; src=&quot;https://avatars1.githubusercontent.com/u/979321?v=3&amp;amp;s=460&quot; style=&quot;float: left; width:400px; height:400px;&quot; /&gt;&lt;br /&gt;
      &lt;b&gt;Harisankar P S aka &lt;i&gt; HsPS&lt;/i&gt;&lt;/b&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;ul style=&quot;float: left&quot;&gt;
        &lt;li&gt;Biker&lt;/li&gt;
        &lt;li&gt;Gadget Enthusiast&lt;/li&gt;
        &lt;li&gt;Writes Ruby code for a living&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Introduction

* Models, as per the MVC pattern are where we store our business logic.
* Forms, refering to web forms, are html pages through which we collect data from the user
* We add a lot of code to the models to make our forms work properly like validations, extra attributes.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### So whats are these form objects?

Form objects are like models just that it would only have code related to your forms.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### So if they are like models, then why create new objects?

Building a complex business application is more or less like building a complex webform, the
way we collect data is most important. Thus our models are growing for just a single form, now imagine
if you require 10 forms for your model, and for each model there is a different requiement.

You will end up with models having over ** 500-1000 ** lines of code. Which essentially becomes a nightmare to
maintain.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### So what will using a form object achieve


  * Code related to a forms would be at a single location

  * Thus it becomes easier to write test for them

  * Our model will end up having only the actual business logic

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Now some live code examples

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;https://github.com/coderhs/form-objects-example
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;Branches:
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;gt; without-form-objects, 
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&amp;gt; with-form-objects&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### So how does this work?
* Duck Typing

Ruby/Rails doesn&#39;t look into the type of object that was passed, the only concern is the methods it tries to call
should be there. ie. if we ask it to quack, it should quack. In this case, we need to make sure that the form gets
the model_name when it calls for it.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### References

* http://railscasts.com/episodes/416-form-objects
* https://robots.thoughtbot.com/activemodel-form-objects
* https://github.com/coderhs/form-objects-example

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
##Thank you :)

&lt;/section&gt;
</description>
        <pubDate>Tue, 09 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/form-objects</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/form-objects</guid>
        
        
      </item>
    
      <item>
        <title>Playing timezones in rails</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;

# Playing timezone in rails

Feb 8, 2016

&lt;/section&gt;

&lt;section&gt;
  &lt;h4&gt;Pooja Raghunath&lt;/h4&gt;
  &lt;p&gt;
    Ruby Developer@RedPanthers
  &lt;/p&gt;
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Why is time important?
* Track when something happened

* Schedule when something will happen

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### What is UTC?
“Coordinated Universal Time” International Standard Other time zones can be described with the number of hours and minutes with which they deviate from UTC as an offset
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### UTC offset?
The UTC offset is the difference in hours and minutes from Coordinated Universal Time (UTC) for a particular place and date.It is generally shown in the format ±[hh]:[mm], ±[hh][mm], or ±[hh].
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
 ### Time zones vs time offsets
 * A time zone is a geographical region where almost everyone observes the same standard time.

* A time offset is an amount of time subtracted from or added to UTC to get the current civil time – whether it&#39;s standard time or daylight saving time.
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Configure your Rails app
 * The most important one is the config.time_zone configuration in your `config/application.rb file`.
 * ActiveRecord will help you convert from and to UTC and the time zone.
 * ActiveRecord fetches UTc time from DB and convert it to the timezone in config.time.zone

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Parsing
* When parsing time information it&#39;s important to never do it without specifying the time zone.
* The best way to do this is to use Time.zone.parse (which will use the time zone specified in config.time_zone) instead of just Time.parse (which will use the computer&#39;s time zone).

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Date vs Time
* Time has date information but Date does NOT have time information.
* Always make sure to convert it to your configured time zone:

* 1.day.from_now # =&amp;gt; Fri, 03 Mar 2012 22:04:47 JST +09:00

* Date.current.in_time_zone # =&amp;gt; Fri, 02 Mar 2012 00:00:00 JST +09:00

* Never use:

 Date.today.to_time # =&amp;gt; 2012-03-02 00:00:00 +0100
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Querying
Since Rails know that your time information is stored as UTC in the database it will convert any time you give it to UTC.

* Post.where([&quot;posts.published_at &amp;gt; ?&quot;, Time.current])
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Working with multiple user time zones

Create a private method in your ActionController and run it as an around filter.  

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
###DOs
* 2.hours.ago # =&amp;gt; Thu, 27 Aug 2015 14:39:36 AFT +04:30
* 1.day.from_now # =&amp;gt; Fri, 28 Aug 2015 16:39:36 AFT +04:30
* Time.zone.parse(&quot;2015-08-27T12:09:36Z&quot;) # =&amp;gt; Thu, 27 Aug 2015 16:39:36 AFT +04:30
* Time.current # =&amp;gt; Thu, 27 Aug 2015 16:39:36 AFT +04:30
* Time.current.utc.iso8601 # When supliyng an API (&quot;2015-08-27T12:09:36Z&quot;)

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;

* Time.strptime(&quot;2015-08-27T12:09:36Z&quot;, &quot;%Y-%m-%dT%H:%M:%S%z&quot;).in_time_zone # If you can&#39;t use Time.zone.parse (Thu, 27 Aug 2015 16:39:36 AFT +04:30)
* Date.current # If you really can&#39;t have a Time or DateTime for some reason (Thu, 27 Aug 2015)
* Date.current.in_time_zone # If you have a date and want to make the best out of it (Thu, 27 Aug 2015 00:00:00 AFT +04:30)
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### DON&#39;Ts
* Time.now # Returns system time and ignores your configured time zone. (2015-08-27 14:09:36 +0200)
* Time.parse(&quot;2015-08-27T12:09:36Z&quot;) # Will assume time string given is in the system&#39;s time zone. (2015-08-27 12:09:36 UTC)
* Time.strptime(&quot;2015-08-27T12:09:36Z&quot;, &quot;%Y-%m-%dT%H:%M:%S%z&quot;) # Same problem as with Time.parse. (2015-08-27 12:09:36 UTC)
* Date.today # This could be yesterday or tomorrow depending on the machine&#39;s time zone, see https://github.com/ramhoj/time-zone-article/issues/1 for more info. (Thu, 27 Aug 2015)
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### What if I don&#39;t have logged in users
If your are building a site that needs to show times and you don&#39;t have logged in users, setting the server time zone is not a solution either. You have the following options:
* Use Javascript on the front end to figure out the correct time to display, based on the user&#39;s browser
* Try this gem https://github.com/scottwater/detectimezonerails
* Use the user&#39;s IP address to infer the timezone
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Testing

* Timezones are working correctly by changing the timezone for the current user and checking that  views show the correct date/time for their timezone.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Integration testing with client side JS
However if you are doing integration testing that involves client side JavaScript, things get more difficult. For example the client side could get the timezone from the browser and then use that for querying the server, this is really hard to mock.
A particular gem that is very useful is timezone_local.

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Reference
* http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html
* http://www.elabs.se/blog/36-working-with-time-zones-in-ruby-on-rails
* https://www.reinteractive.net/posts/168-dealing-with-timezones-effectively-in-rails

&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
### Thank You!!

&lt;/section&gt;
</description>
        <pubDate>Mon, 08 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/playing-timezone-in-rails</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/playing-timezone-in-rails</guid>
        
        
      </item>
    
      <item>
        <title>Facebook Flux</title>
        <description>&lt;section data-markdown=&quot;&quot;&gt;
 Flux
&lt;/section&gt;
&lt;section&gt;
	&lt;h4&gt;Sibin Xavier&lt;/h4&gt;
	&lt;p&gt;
		Frontend Developer
	&lt;/p&gt;
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ## What is Flux
  * Flux is an architecture used at Facebook with React
  * Enhance React&#39;s features
  * It is an architecture not a library like
  Angular/ Backbone
  * Flux has Unidirectional data flow
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ### Uni directional data flow
  * One directional data flow
  * More predictable nature
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Example of Bi-directional data flow
  ![Bi-Directional](/slides/assets/images/backbone-bi-directional.png)
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Unidirectional data flow
  ![Uni directional data flow](/slides/assets/images/uni-directional-data-flow.png)
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ### Flux - Important points
  * Action
  * dispatcher
  * Store
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
  #### Flux Architecture diagram
  ![Flux Architecture diagram](/slides/assets/images/flux-simple-f8-diagram-explained.png)
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Action
  * Collection of methods, that are called inside views
  * Action methods can used with javascript events like click, change, mouseleave etc
  * Action connected to dispatcher
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ##### Example code for action
  ```
    import dispatcher from &quot;../dispatcher&quot;;
    import constants from &quot;../const/store-const&quot;;
    var checkoutActions = {
      addCart: function(data){
        dispatcher.dispatch({
          actionType: constants.ADD_CART,
          data: data
        })
      }
    }
    export default checkoutActions;
  ```
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Dispatcher
  * Center hub for your application
  * Controls stores
  * Receive data from actions and trigger stores
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ##### Example code Dispatcher
  ```
    import {Dispatcher} from &#39;flux&#39;;
    var dispatcher = new Dispatcher();
    export default dispatcher;
  ```
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Dispatcher have
  * register (method)
  * unregister (string)
  * dispatch (object)
  * waitFor
  * isDispatching ( boolean)
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ##### waitFor is not to handle ajax
  waitFor is used to wait some other store to complete it can&#39;t be used to make ajax calls
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ```
    CountryStore.dispatchToken = flightDispatcher.register(function(payload) {
     if (payload.actionType === &#39;country-update&#39;) {
       CountryStore.country = payload.selectedCountry;
     }
    });
  ```
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ```
  CityStore.dispatchToken = flightDispatcher.register(function(payload) {
  if (payload.actionType === &#39;country-update&#39;) {
    // `CountryStore.country` may not be updated.
    flightDispatcher.waitFor([CountryStore.dispatchToken]);
    // `CountryStore.country` is now guaranteed to be updated.

    // Select the default city for the new country
    CityStore.city = getDefaultCityForCountry(CountryStore.country);
  }
  });
  ```
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Store
  * Manage application state
  * Use it to get initial data and updated data
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ```
    import dispatcher from &#39;../dispatcher.js&#39;;
    import EventEmitter from &#39;events&#39;;
    import assign from &#39;object-assign&#39;;
    var CHANGE_EVENT = &#39;change&#39;;
    var EventEmitterEvent  = EventEmitter.EventEmitter

    var _number  = 0;
    var checkoutStore = assign({}, EventEmitterEvent.prototype, {
      addCart: function(number){
        return _number = _number + number;
      },
      getCart: function(){
        return _number;
      },
      emitChange: function(){
        this.emit(CHANGE_EVENT)
      },
      addListener: function(callback){
        this.on(CHANGE_EVENT, callback)
      },
      removeListner: function(callback){
        this.removeListner(CHANGE_EVENT, callback)
      }
    });

    dispatcher.register((action)=&amp;gt;{
      switch (action.actionType){
        case &#39;ADD_CART&#39;:
          console.log(&quot;hello&quot;)
          checkoutStore.addCart(action.data)
          checkoutStore.emitChange()
          break;
      }
    })


    export default checkoutStore;
  ```
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Event Emitter
  * Flux use similar node js Event emitter
  * EventEmitter listen/broadcast named events
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  #### Event emitter

  * emitter.on(&#39;event_name&#39;,callback) // addListener
  * emitter.emit(&#39;event_name&#39;)
  * emitter.removeListener(&#39;event_name&#39;)

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ![Event Diagram](/slides/assets/images/events.png)
&lt;/section&gt;

&lt;section data-markdown=&quot;&quot;&gt;
  #### React View and Flux

  * We can connect react components with react

&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
  ```
  class CartIconOnTopBar extends React.Component{
    constructor(){
      super()
      this.state = {
        cartItemCount: checkoutStore.getCart()
      }
    }
    componentDidMount(){
     checkoutStore.addListener(this.updateCart)
    };
    updateCart = () =&amp;gt; {
      this.setState({
        cartItemCount: checkoutStore.getCart()
      })
    };
    openClassModal = () =&amp;gt; {

    };
    render(){
      return(
          &lt;li&gt;
            &amp;lt;a href=&quot;#&quot; onClick={this.openCartModal} className=&quot;cart-element&quot;&amp;gt;
              &lt;i classname=&quot;fi-shopping-cart&quot;&gt;&lt;/i&gt;
              &lt;span classname=&quot;cart-count&quot;&gt; {this.state.cartItemCount} &lt;/span&gt;  
            
          &lt;/li&gt;
      )
    }
  }
    export default TopSearch;
  ```
&lt;/section&gt;
&lt;section data-markdown=&quot;&quot;&gt;
    ##### Reference
    - [NodeJS Events](https://nodejs.org/api/events.html)
    - [Flux Docs](http://facebook.github.io/flux/docs/overview.html#content)
    - [Scotch - Getting Know Flux](https://scotch.io/tutorials/getting-to-know-flux-the-react-js-architecture)
    - [Unidirectional data flow](https://medium.com/@AdamRNeary/unidirectional-data-flow-yes-flux-i-am-not-so-sure-b4acf988196c#.5olj6qx6k)

&lt;/section&gt;
</description>
        <pubDate>Fri, 05 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://slides.redpanthers.co/slides/facebook-flux</link>
        <guid isPermaLink="true">http://slides.redpanthers.co/slides/facebook-flux</guid>
        
        
      </item>
    
  </channel>
</rss>
